/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class particles_EffekseerCoreJNI */

#ifndef _Included_particles_EffekseerCoreJNI
#define _Included_particles_EffekseerCoreJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    new_EffekseerBackendCore
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_particles_EffekseerCoreJNI_new_1EffekseerBackendCore
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    delete_EffekseerBackendCore
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_delete_1EffekseerBackendCore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerBackendCore_GetDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_particles_EffekseerCoreJNI_EffekseerBackendCore_1GetDevice
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerBackendCore_InitializeAsOpenGL
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerBackendCore_1InitializeAsOpenGL
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerBackendCore_Terminate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerBackendCore_1Terminate
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    new_EffekseerEffectCore
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_particles_EffekseerCoreJNI_new_1EffekseerEffectCore
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    delete_EffekseerEffectCore
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_delete_1EffekseerEffectCore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_Load
 * Signature: (JLparticles/EffekseerEffectCore;[BIFJ)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1Load
  (JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jfloat, jlong);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetTexturePath
 * Signature: (JLparticles/EffekseerEffectCore;II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetTexturePath
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetTextureCount
 * Signature: (JLparticles/EffekseerEffectCore;I)I
 */
JNIEXPORT jint JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetTextureCount
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_LoadTexture
 * Signature: (JLparticles/EffekseerEffectCore;[BIII)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1LoadTexture
  (JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_LoadTexturePath
 * Signature: (JLparticles/EffekseerEffectCore;Ljava/lang/String;III)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1LoadTexturePath
  (JNIEnv *, jclass, jlong, jobject, jstring, jint, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_HasTextureLoaded
 * Signature: (JLparticles/EffekseerEffectCore;II)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1HasTextureLoaded
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetModelPath
 * Signature: (JLparticles/EffekseerEffectCore;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetModelPath
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetModelCount
 * Signature: (JLparticles/EffekseerEffectCore;)I
 */
JNIEXPORT jint JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetModelCount
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_LoadModel
 * Signature: (JLparticles/EffekseerEffectCore;[BII)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1LoadModel
  (JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_HasModelLoaded
 * Signature: (JLparticles/EffekseerEffectCore;I)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1HasModelLoaded
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetMaterialPath
 * Signature: (JLparticles/EffekseerEffectCore;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetMaterialPath
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_GetMaterialCount
 * Signature: (JLparticles/EffekseerEffectCore;)I
 */
JNIEXPORT jint JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1GetMaterialCount
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_LoadMaterial
 * Signature: (JLparticles/EffekseerEffectCore;[BII)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1LoadMaterial
  (JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerEffectCore_HasMaterialLoaded
 * Signature: (JLparticles/EffekseerEffectCore;I)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerEffectCore_1HasMaterialLoaded
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    new_EffekseerManagerCore
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_particles_EffekseerCoreJNI_new_1EffekseerManagerCore
  (JNIEnv *, jclass);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    delete_EffekseerManagerCore
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_delete_1EffekseerManagerCore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Initialize
 * Signature: (JLparticles/EffekseerManagerCore;II)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Initialize
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Update
 * Signature: (JLparticles/EffekseerManagerCore;F)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Update
  (JNIEnv *, jclass, jlong, jobject, jfloat);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Pause
 * Signature: (JLparticles/EffekseerManagerCore;I)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Pause
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Resume
 * Signature: (JLparticles/EffekseerManagerCore;I)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Resume
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Isplaying
 * Signature: (JLparticles/EffekseerManagerCore;I)Z
 */
JNIEXPORT jboolean JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Isplaying
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_DrawBack
 * Signature: (JLparticles/EffekseerManagerCore;)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1DrawBack
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_DrawFront
 * Signature: (JLparticles/EffekseerManagerCore;)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1DrawFront
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_SetProjectionMatrix
 * Signature: (JLparticles/EffekseerManagerCore;[F[F)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1SetProjectionMatrix
  (JNIEnv *, jclass, jlong, jobject, jfloatArray, jfloatArray);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_Play
 * Signature: (JLparticles/EffekseerManagerCore;JLparticles/EffekseerEffectCore;)I
 */
JNIEXPORT jint JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1Play
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     particles_EffekseerCoreJNI
 * Method:    EffekseerManagerCore_SetEffectPosition
 * Signature: (JLparticles/EffekseerManagerCore;IFFF)V
 */
JNIEXPORT void JNICALL Java_particles_EffekseerCoreJNI_EffekseerManagerCore_1SetEffectPosition
  (JNIEnv *, jclass, jlong, jobject, jint, jfloat, jfloat, jfloat);

#ifdef __cplusplus
}
#endif
#endif
